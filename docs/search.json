[
  {
    "objectID": "sourcecode.html",
    "href": "sourcecode.html",
    "title": "",
    "section": "",
    "text": "Group 9\n\n\nRedesign Visualization : Map and Bar Graph\n\nImport required libraries for the redesign. Shiny and Shinydashboard is used for the UI of the visualization, plotly for the interactive graph and tidyverse for the visualization and manipulation purposes.\n\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(shiny)\n\nWarning: package 'shiny' was built under R version 4.3.3\n\nlibrary(shinydashboard)\n\nWarning: package 'shinydashboard' was built under R version 4.3.3\n\n\n\nThe dataset is read and stored in “poverty”. Before the visualization the data is cleaned, removed the “,” and replaced the population percentage column data with “.” (period) and changed the data type to numeric to represent it as a floating point. Mapdata set and the poverty data is joined to plot a world map.\n\npoverty = read.csv(\"Poverty.csv\")\n\npoverty$X..of.population &lt;- gsub(\",\", \".\", poverty$X..of.population)\n\nmapdata &lt;- map_data(\"world\") %&gt;% as_tibble()\n\npoverty &lt;- poverty %&gt;% rename(region = Country)\n\nmapdata &lt;- left_join(mapdata, poverty, by=\"region\")\n\nmapdata &lt;-mapdata %&gt;% filter(!is.na(mapdata$Population))\n\nstr(mapdata)\n\nmapdata$X..of.population &lt;- as.numeric(as.character(mapdata$X..of.population))\n\n\nPlot the data on the world map and use plotly for making it interactive\n\nmap1 &lt;- ggplot(mapdata, aes(x = long, y = lat, group = group, text = paste(region, \": \", Total.number.of.people.living.in.extreme.poverty, \"M\"))) +\n  geom_polygon(aes(fill = X..of.population), color = \"black\") +\n  scale_fill_gradient(low = \"orange\", high = \"red\", name = \"Poverty %\") +\n  labs(title = \"Poverty Percentage by Region\") +\n  theme_minimal()\n\nmap1_plotly &lt;- ggplotly(map1, tooltip = \"text\")\n\n\nUsing shiny UI is developed and connected using the server to display the map according the logic specified. If the graph type is a map then there will be a drop down displayed with the regions and single value selection type input. On the other hand if the graph type is a Bar then the input will a drop down with region names and multiple value input box. For both the graphs the data set is cleaned and filtered according to the input selection and passed to the ggplot for render the graph accordingly.\n\nui &lt;- dashboardPage(\n  dashboardHeader(title = \"Poverty Data by Region\", titleWidth = 300),\n  dashboardSidebar(\n    width = 300,\n    conditionalPanel(\n      condition = \"input.graphType === 'Map'\",\n      selectInput(\"regionDropdown\", \"Select Region:\", choices = c(\"World\", unique(mapdata$region)))\n    ),\n    selectInput(\"graphType\", \"Select Graph Type:\", choices = c(\"Map\", \"Bar\")),\n    conditionalPanel(\n      condition = \"input.graphType === 'Bar'\",\n      selectizeInput(\"selectedValues\", \"Select Country(s):\", choices = unique(mapdata$region), multiple = TRUE, selected = unique(mapdata$region)[1])\n    ),\n    actionButton(\"updateButton\", \"Update View\"),\n    tags$head(tags$style(HTML('\n      .skin-blue .main-sidebar { background-color: #1f4d6e; }\n      .skin-blue .main-header .navbar { background-color: #1f4d6e; }\n      .skin-blue .main-header .logo { background-color: #1f4d6e; }\n    ')))\n  ),\n  dashboardBody(\n    fluidRow(\n      box(plotlyOutput(\"plotOutput\"), width = 12)\n    )\n  )\n)\n\nserver &lt;- function(input, output) {\n  selected_country &lt;- reactive({\n    if (length(input$selectedValues) == 0) {\n      unique(mapdata$region)[1]\n    } else {\n      input$selectedValues\n    }\n  })\n  output$plotOutput &lt;- renderPlotly({\n    if (input$regionDropdown == \"World\") {\n      filteredData &lt;- mapdata\n    } else {\n      filteredData &lt;- mapdata[mapdata$region == input$regionDropdown, ]\n    }\n    \n    if (input$graphType == \"Map\") {\n      Map &lt;- ggplot(filteredData, aes(x = long, y = lat, group = group, text = paste(region, \": \", Total.number.of.people.living.in.extreme.poverty))) +\n        geom_polygon(aes(fill = X..of.population), color = \"black\") +\n        scale_fill_gradient(low = \"light green\", high = \"red\", name = \"Poverty %\") +\n        labs(title = paste(\"Poverty Percentage in\", input$regionDropdown)) +\n        theme_minimal() +\n        theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)) +\n        coord_fixed(1.3)\n      \n      ggplotly(Map, tooltip = \"text\")\n    } else if (input$graphType == \"Bar\") {\n     \n      povertybar &lt;- poverty[poverty$region %in% input$selectedValues, ]\n      povertybar$Total.number.of.people.living.in.extreme.poverty &lt;- gsub(\",\", \"\", povertybar$Total.number.of.people.living.in.extreme.poverty)\n      povertybar$Total.number.of.people.living.in.extreme.poverty &lt;- as.numeric(povertybar$Total.number.of.people.living.in.extreme.poverty)\n  \n      Bargraph &lt;- ggplot(povertybar, aes(x = region, y = Total.number.of.people.living.in.extreme.poverty, fill = region, text = paste(\"Population:\", Total.number.of.people.living.in.extreme.poverty, \"M\"))) +\n        geom_bar(stat = \"identity\") +\n        scale_fill_discrete(name = \"Region\") + \n        labs(title = \"Poverty Comparison among Regions\",\n             y = \"Population (M)\", x = \"Country\") +\n        theme_minimal() +\n        theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5))+\n        scale_y_continuous(labels = scales::comma)\n      \n      ggplotly(Bargraph, tooltip = \"text\")\n    }\n  })\n}\nshinyApp(ui, server)\n\n\n\n\nRedesign Visualization : Line Graph\n\nImport the appropriate libraries\n\nlibrary(shiny)\nlibrary(plotly)\n\n\nClean the data set by removing the parenthesis from the country column and rename the column for easier usage of attribute names (optional).\n\npoverty = read.csv(\"Poverty.csv\")\n\npoverty_year = read.csv(\"C:/Users/darsh/Desktop/STAT 515/Mid Project/Population in poverty.csv\")\n\npoverty_year$Entity &lt;- gsub(\"\\\\(.*?\\\\)\", \"\", poverty_year$Entity)\n\npoverty_year &lt;- poverty_year %&gt;% rename(Country = Entity)\n\npoverty_year &lt;- poverty_year %&gt;% rename(Poverty.Percentage = X.2.15.a.day...Share.of.population.in.poverty)\n\n\nUsing Shiny, UI is developed and server renders the output according to the input value and entire UI is rendered. Line chart is displayed showing the details of the poverty percentage over the period of time.\n\nui &lt;- fluidPage(\n  titlePanel(\"Country Poverty Percentage Over Years\"),\n  selectizeInput(\"countryInput\", \"Select Country(s):\",\n                 choices = unique(poverty_year$Country),\n                 multiple = TRUE, selected = unique(poverty_year$Country)[1]),\n  plotlyOutput(\"povertyPlot\")\n)\n\nserver &lt;- function(input, output) {\n  selected_country &lt;- reactive({\n    if (length(input$countryInput) == 0) {\n      unique(poverty_year$Country)[1]\n    } else {\n      input$countryInput\n    }\n  })\n  \n  output$povertyPlot &lt;- renderPlotly({\n    filtered_data &lt;- poverty_year[poverty_year$Country %in% selected_country(), ]\n    \n    p &lt;- ggplot(filtered_data, aes(x = Year, y = Poverty.Percentage, color = Country)) +\n      geom_line() +\n      geom_point(aes(text = paste(\"Year:\", Year, \"&lt;br&gt;Population in Poverty (%):\", Poverty.Percentage))) +\n      theme_minimal() +\n      labs(title = paste(\"Poverty Percentage Over Years\"),\n           y = \"Poverty Percentage\", x = \"Year\")\n    \n    ggplotly(p, tooltip = \"text\")\n  })\n}\nshinyApp(ui, server)\n\nNote : Since Shiny is not supported in this static page the output is not displayed hence check the video link on the projects page for the full interactive UI demo"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "",
    "section": "",
    "text": "I’m Darshini Balakrishnan, currently advancing my studies in the Data Analytics and Engineering Master’s program at George Mason University, located in Fairfax, VA. My enthusiasm for technology drives my proficiency in a variety of programming languages, including Python, R, and SQL, alongside my experience with web development frameworks such as Angular, not to mention my skills in HTML and CSS. My academic journey began with a Bachelor of Technology degree from the Coimbatore Institute of Technology in Coimbatore, Tamilnadu, India, setting a solid foundation for my ongoing pursuits in the tech field. I have also gained practical experience as a Product Engineer at Tekizma India Solutions Private Limited in Bangalore, further enriching my skills and expertise in the technology sector."
  },
  {
    "objectID": "projectpage.html",
    "href": "projectpage.html",
    "title": "",
    "section": "",
    "text": "Group 9\n\n\nRedesign Visualizations of an Poverty Bad graph\nThis is a project of redesigning a original graph which had flaws. I have made three different visualizations from the data which i have gathered from the original graph and supporting dataset to improve the visualization by making the graphs more informative.\n\n\n\nOriginal Graph\n\n\n\n\n\n\n\n\n\n\n\nThis is a visualization of a graph representing Extreme Poverty Rate of various countries categorized by the poverty percentage in the year 2021. Conclusions from this graph are difficult to be made since the countries with the least poverty percentages are smaller in size and there are too much graphics which will make the users bored and more time consuming for the audience to extract the required information. The visualization does not conclude the poverty rates from different time periods as well. This bad graph can be redesigned as follows to make the information laid out more clearly and precisely.\n\n\n\nRedesign Visualizations\n\n\n\n\n\n\n\n\nThis is a representation of the world map filled in a color gradient according to the percentage of poverty from low (green) and high(red). Particular regions can be selected from the dropdown and the map of that particular state along with count of population will be shown. This will enable the audience to view the required information in a faster way along with the exact count of population in extreme poverty.\n\n\n\n\n\n\n\n\nThe above bar graph is an example of three different countries representing the population of people in extreme poverty in Millions. This redesign aims to portray the comparison of the count of population in extreme poverty with an interactive UI so that users can make choices of comparison according to the country they need to compare. Multiple countries can be selected to make the comparisons between them and conclude analysis.\n\n\n\n\n\n\n\n\nThe Line chart displays the change in poverty percentage over a period of time, where the original graph does not contain the data over the years. This will be useful for the users to compare the change in poverty percentage over a period of time between multiple countries and a particular country’s information can also be retrieved according to the choice made. The points on the line give’s information of the year and the poverty rate at that particular time periods. The time period data was collected from the “Our world data in data” to make the visualization more informative.\n\nThis is an video explanation of the entire project and the redesigns\n\n\n\n\n\nReferences:\n\n\nDataset\n\nVisualizing Extreme Poverty by Country, 2021\n\nhttps://worldpoverty.io/about\n\nShare of population living in extreme poverty, January 17, 2024\n\nhttps://ourworldindata.org/grapher/share-of-population-in-extreme-poverty?tab=table#sources-and-processing\n\n\nOriginal graph\nVisualizing Extreme Poverty by Country,Published, 23rd February 2021\nhttps://howmuch.net/articles/extreme-poverty-around-world"
  },
  {
    "objectID": "projectpage.html#redesign-visualizations-of-an-poverty-bad-graph",
    "href": "projectpage.html#redesign-visualizations-of-an-poverty-bad-graph",
    "title": "",
    "section": "",
    "text": "This is a project of redesigning a original graph which had flaws. I have made three different visualizations from the data which i have gathered from the original graph and supporting dataset to improve the visualization by making the graphs more informative.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is a visualization of a graph representing Extreme Poverty Rate of various countries categorized by the poverty percentage in the year 2021. Conclusions from this graph are difficult to be made since the countries with the least poverty percentages are smaller in size and there are too much graphics which will make the users bored and more time consuming for the audience to extract the required information. The visualization does not conclude the poverty rates from different time periods as well. This bad graph can be redesigned as follows to make the information laid out more clearly and precisely.\n\n\n\n\n\n\n\n\n\n\n\n\nThis is a representation of the world map filled in a color gradient according to the percentage of poverty from low (green) and high(red). Particular regions can be selected from the dropdown and the map of that particular state along with count of population will be shown. This will enable the audience to view the required information in a faster way along with the exact count of population in extreme poverty.\n\n\n\n\n\n\n\n\nThe above bar graph is an example of three different countries representing the population of people in extreme poverty in Millions. This redesign aims to portray the comparison of the count of population in extreme poverty with an interactive UI so that users can make choices of comparison according to the country they need to compare. Multiple countries can be selected to make the comparisons between them and conclude analysis.\n\n\n\n\n\n\n\n\nThe Line chart displays the change in poverty percentage over a period of time, where the original graph does not contain the data over the years. This will be useful for the users to compare the change in poverty percentage over a period of time between multiple countries and a particular country’s information can also be retrieved according to the choice made. The points on the line give’s information of the year and the poverty rate at that particular time periods. The time period data was collected from the “Our world data in data” to make the visualization more informative.\n\nThis is an video explanation of the entire project and the redesigns\n\n\n\n\n\n\n\n\n\n\n\nVisualizing Extreme Poverty by Country, 2021\n\nhttps://worldpoverty.io/about\n\nShare of population living in extreme poverty, January 17, 2024\n\nhttps://ourworldindata.org/grapher/share-of-population-in-extreme-poverty?tab=table#sources-and-processing\n\n\n\nVisualizing Extreme Poverty by Country,Published, 23rd February 2021\nhttps://howmuch.net/articles/extreme-poverty-around-world"
  }
]